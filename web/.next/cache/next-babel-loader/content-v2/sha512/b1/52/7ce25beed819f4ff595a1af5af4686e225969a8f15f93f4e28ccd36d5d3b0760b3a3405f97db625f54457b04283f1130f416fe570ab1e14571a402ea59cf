{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { stringify } from 'querystring';\nexport var getAuth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var clientId, clientSecret, headers, data, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clientId = process.env.CLIENT_ID;\n            clientSecret = process.env.CLIENT_SECRET;\n            headers = {\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/x-www-form-urlencoded'\n              },\n              auth: {\n                username: clientId,\n                password: clientSecret\n              }\n            };\n            data = {\n              grant_type: 'client_credentials'\n            };\n            _context.prev = 4;\n            _context.next = 7;\n            return axios.post('https://accounts.spotify.com/api/token', stringify(data), headers);\n\n          case 7:\n            response = _context.sent;\n            console.log(response.data.access_token);\n            return _context.abrupt(\"return\", response.data.access_token);\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 12]]);\n  }));\n\n  return function getAuth() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/utils/getAuth.js"],"names":["axios","stringify","getAuth","clientId","process","env","CLIENT_ID","clientSecret","CLIENT_SECRET","headers","Accept","auth","username","password","data","grant_type","post","response","console","log","access_token"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAO,IAAMC,OAAO;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,QADe,GACJC,OAAO,CAACC,GAAR,CAAYC,SADR;AAEfC,YAAAA,YAFe,GAEAH,OAAO,CAACC,GAAR,CAAYG,aAFZ;AAIfC,YAAAA,OAJe,GAIL;AACdA,cAAAA,OAAO,EAAE;AACPC,gBAAAA,MAAM,EAAE,kBADD;AAEP,gCAAgB;AAFT,eADK;AAKdC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,QAAQ,EAAET,QADN;AAEJU,gBAAAA,QAAQ,EAAEN;AAFN;AALQ,aAJK;AAcfO,YAAAA,IAde,GAcR;AACXC,cAAAA,UAAU,EAAE;AADD,aAdQ;AAAA;AAAA;AAAA,mBAmBIf,KAAK,CAACgB,IAAN,CACrB,wCADqB,EAErBf,SAAS,CAACa,IAAD,CAFY,EAGrBL,OAHqB,CAnBJ;;AAAA;AAmBbQ,YAAAA,QAnBa;AAwBnBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACH,IAAT,CAAcM,YAA1B;AAxBmB,6CAyBZH,QAAQ,CAACH,IAAT,CAAcM,YAzBF;;AAAA;AAAA;AAAA;AA2BnBF,YAAAA,OAAO,CAACC,GAAR;;AA3BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPjB,OAAO;AAAA;AAAA;AAAA,GAAb","sourcesContent":["import axios from 'axios';\r\nimport { stringify } from 'querystring';\r\n\r\n\r\nexport const getAuth = async () => {\r\n  const clientId = process.env.CLIENT_ID;\r\n  const clientSecret = process.env.CLIENT_SECRET;\r\n  \r\n  const headers = {\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    },\r\n    auth: {\r\n      username: clientId,\r\n      password: clientSecret,\r\n    },\r\n  };\r\n  const data = {\r\n    grant_type: 'client_credentials',\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'https://accounts.spotify.com/api/token',\r\n      stringify(data),\r\n      headers\r\n    );\r\n    console.log(response.data.access_token);\r\n    return response.data.access_token;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
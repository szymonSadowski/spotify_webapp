{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport Spotify from \"spotify-web-api-js\";\n\n// import { getAccesstoken } from \"../utils/getAccessToken\";\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.access_token;\n  const {\n    0: name,\n    1: setName\n  } = useState({\n    name: ''\n  });\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  console.log(name, 'name');\n  spotifyApi.setAccessToken(tokenCode);\n\n  const getMe = async () => {\n    spotifyApi.getMe().then(res => {\n      console.log(res);\n      const resName = res.display_name;\n      return resName;\n    });\n    return /*#__PURE__*/_jsxDEV(Container, {\n      height: \"100vh\",\n      children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useState","Container","DarkModeSwitch","Spotify","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","console","log","setAccessToken","getMe","then","res","resName","display_name"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIL,OAAJ,EAAnB;AACA,QAAMM,SAAS,GAAGH,KAAK,CAACI,YAAxB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAAC;AAC/BW,IAAAA,IAAI,EAAE;AADyB,GAAD,CAAhC;;AAIA,MAAI,OAAOF,SAAP,IAAoB,QAAxB,EAAkC;AAChCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAAuB,WAAvB;AACD,GAFD,MAEO;AACL,WAAO,0BAAP;AACD;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,MAAlB;AACAH,EAAAA,UAAU,CAACO,cAAX,CAA0BN,SAA1B;;AACA,QAAMO,KAAK,GAAG,YAAW;AACvBR,IAAAA,UAAU,CAACQ,KAAX,GAAmBC,IAAnB,CAAwBC,GAAG,IAAI;AAC/BL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,YAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACA,aAAOD,OAAP;AACD,KAJC;AAMA,wBACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC,OAAlB;AAAA,8BACA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAfD;;AAgBA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKC,CArCH;;AAuCA,eAAef,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { stringify } from \"query-string\";\r\n// import { getAccesstoken } from \"../utils/getAccessToken\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  const [name, setName] = useState({\r\n    name: ''\r\n\r\n  });\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n  console.log(name, 'name')\r\n  spotifyApi.setAccessToken(tokenCode);\r\n  const getMe = async() => {\r\n    spotifyApi.getMe().then(res => {\r\n    console.log(res);\r\n    const resName = res.display_name as string;\r\n    return resName;\r\n  })\r\n\r\n    return (\r\n      <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n      <div>\r\n      \r\n      </div>\r\n        </Container>\r\n    )\r\n  }\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n        </Container>\r\n  );\r\n  }\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
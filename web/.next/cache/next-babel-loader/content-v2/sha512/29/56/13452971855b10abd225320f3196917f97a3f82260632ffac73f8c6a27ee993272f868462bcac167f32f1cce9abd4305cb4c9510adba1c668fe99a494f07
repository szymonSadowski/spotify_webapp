{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Container } from \"../components/Container\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport Spotify from \"spotify-web-api-js\";\n\n// import { getAccesstoken } from \"../utils/getAccessToken\";\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.code; // const getAccesstoken = async() => {\n  //   await axios({\n  //     method: 'POST',\n  //     url:'https://accounts.spotify.com/api/token?grant_type=client_credentials',\n  //     params: {\n  //       client_id: process.env.CLIENT_ID,\n  //       client_secret: process.env.CLIENT_SECRET,\n  //       grant_type: 'authorization_code',\n  //       code: tokenCode,\n  //       redirect_uri: 'http://localhost:3000/home/'\n  //     },\n  //   })\n  //   .then(tokenResponse => {      \n  //    console.log(tokenResponse);\n  //   })\n  // }\n\n  if (typeof tokenCode == \"string\") {\n    // spotifyApi.setAccessToken(tokenCode);\n    getAccesstoken();\n  } else {\n    return \"Token access not granted\";\n  } // spotifyApi.setAccessToken(token.code);\n\n\n  console.log(token.code);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","Container","DarkModeSwitch","Spotify","Home","router","token","query","spotifyApi","tokenCode","code","getAccesstoken","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIL,OAAJ,EAAnB;AACA,QAAMM,SAAS,GAAGH,KAAK,CAACI,IAAxB,CAJiB,CAMjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI,OAAOD,SAAP,IAAoB,QAAxB,EAAkC;AAChC;AACAE,IAAAA,cAAc;AACf,GAHD,MAGO;AACL,WAAO,0BAAP;AACD,GA3BgB,CA6BjB;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACI,IAAlB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArCD;;AAuCA,eAAeN,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport axios from \"axios\";\r\n// import { getAccesstoken } from \"../utils/getAccessToken\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.code;\r\n\r\n  // const getAccesstoken = async() => {\r\n  //   await axios({\r\n  //     method: 'POST',\r\n  //     url:'https://accounts.spotify.com/api/token?grant_type=client_credentials',\r\n  //     params: {\r\n  //       client_id: process.env.CLIENT_ID,\r\n  //       client_secret: process.env.CLIENT_SECRET,\r\n  //       grant_type: 'authorization_code',\r\n  //       code: tokenCode,\r\n  //       redirect_uri: 'http://localhost:3000/home/'\r\n  //     },\r\n  //   })\r\n  //   .then(tokenResponse => {      \r\n  //    console.log(tokenResponse);\r\n  //   })\r\n  // }\r\n  if (typeof tokenCode == \"string\") {\r\n    // spotifyApi.setAccessToken(tokenCode);\r\n    getAccesstoken();\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  // spotifyApi.setAccessToken(token.code);\r\n  console.log(token.code);\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport const useFetch = tokenCode => {\n  // console.log(tokenCode);\n  const {\n    0: data,\n    1: setData\n  } = useState({});\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n\n  if (tokenCode !== null || undefined) {\n    useEffect(() => {\n      const fetchdata = async () => {\n        const response = await fetch(`http://localhost:8080/podcast?access_token=${tokenCode}`);\n        const dataResponse = await response.json(); // const item = dataResponse.results[0];\n\n        const myData = Object.keys(dataResponse).map(key => {\n          return dataResponse[key];\n        }); // console.log(myData[0].show.id)\n\n        const idData = myData.map(data => {\n          return data.show.id;\n        });\n        console.log(idData, 'idData');\n        setData(idData);\n        console.log(dataResponse);\n      };\n\n      fetchdata();\n    }, [tokenCode]);\n    return {\n      data,\n      loading\n    };\n  } else return 'Token not provided';\n};","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/utils/useFetch.ts"],"names":["useState","useEffect","useFetch","tokenCode","data","setData","loading","setLoading","undefined","fetchdata","response","fetch","dataResponse","json","myData","Object","keys","map","key","idData","show","id","console","log"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,SAAD,IAAuB;AAC3C;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,IAAD,CAAtC;;AACA,MAAGG,SAAS,KAAK,IAAd,IAAsBK,SAAzB,EAAoC;AAChCP,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMQ,SAAS,GAAG,YAAY;AAC5B,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CR,SAAU,EAD9B,CAA5B;AAGA,cAAMS,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B,CAJ4B,CAK5B;;AACA,cAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,YAAZ,EAA0BK,GAA1B,CAA8BC,GAAG,IAAI;AAClD,iBAAON,YAAY,CAACM,GAAD,CAAnB;AACD,SAFc,CAAf,CAN4B,CAS5B;;AACA,cAAMC,MAAM,GAAGL,MAAM,CAACG,GAAP,CAAWb,IAAI,IAAI;AAChC,iBAAOA,IAAI,CAACgB,IAAL,CAAUC,EAAjB;AACD,SAFc,CAAf;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ,EAAoB,QAApB;AACAd,QAAAA,OAAO,CAACc,MAAD,CAAP;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AACD,OAhBD;;AAiBAH,MAAAA,SAAS;AACV,KAnBM,EAmBJ,CAACN,SAAD,CAnBI,CAAT;AAoBE,WAAO;AAAEC,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAP;AACL,GAtBD,MAuBK,OAAO,oBAAP;AACN,CA5BI","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (tokenCode: string) => {\r\n    // console.log(tokenCode);\r\n    const [data, setData] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    if(tokenCode !== null || undefined) {\r\n        useEffect(() => {\r\n            const fetchdata = async () => {\r\n              const response = await fetch(\r\n                `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n              );\r\n              const dataResponse = await response.json();\r\n              // const item = dataResponse.results[0];\r\n              const myData = Object.keys(dataResponse).map(key => {\r\n                return dataResponse[key];\r\n              });\r\n              // console.log(myData[0].show.id)\r\n              const idData = myData.map(data => {\r\n                return data.show.id as string;\r\n              })\r\n              console.log(idData, 'idData')\r\n              setData(idData);\r\n              console.log(dataResponse);\r\n            };\r\n            fetchdata();\r\n          }, [tokenCode]);\r\n          return { data, loading };\r\n    }\r\n    else return 'Token not provided';\r\n  };"]},"metadata":{},"sourceType":"module"}
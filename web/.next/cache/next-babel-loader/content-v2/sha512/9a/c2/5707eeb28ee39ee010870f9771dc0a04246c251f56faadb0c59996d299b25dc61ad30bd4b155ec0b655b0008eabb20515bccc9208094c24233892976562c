{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\index.tsx\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport { Container } from \"../components/Container\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { url } from \"../utils/loginUrl\";\nimport { useState } from \"react\";\nimport axios from \"axios\"; // import { authenticationLogin } from \"../utils/authenticationLogin\";\n\nconst Index = () => {\n  const {\n    0: token,\n    1: setToken\n  } = useState('');\n  axios('https://accounts.spotify.com/authorize/token', {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic' + btoa(process.env.CLIENT_ID + ':' + process.env.CLIENT_SECRET)\n    },\n    data: 'grant_type=client_credentials',\n    method: 'POST'\n  }).then(tokenResponse => {\n    console.log(tokenResponse.data.access_token);\n    setToken(tokenResponse.data.access_token);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: url,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/index.tsx"],"names":["DarkModeSwitch","Container","Button","Link","url","useState","axios","Index","token","setToken","headers","btoa","process","env","CLIENT_ID","CLIENT_SECRET","data","method","then","tokenResponse","console","log","access_token"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,8BAA/B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,kBAA7B;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAElB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,KAAK,CAAC,8CAAD,EAAiD;AACpDI,IAAAA,OAAO,EAAE;AACP,sBAAiB,mCADV;AAEP,uBAAkB,UAAUC,IAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,SAAZ,GAAwB,GAAxB,GAA8BF,OAAO,CAACC,GAAR,CAAYE,aAA3C;AAFzB,KAD2C;AAKpDC,IAAAA,IAAI,EAAE,+BAL8C;AAMpDC,IAAAA,MAAM,EAAE;AAN4C,GAAjD,CAAL,CAQCC,IARD,CAQMC,aAAa,IAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAACH,IAAd,CAAmBM,YAA/B;AACAb,IAAAA,QAAQ,CAACU,aAAa,CAACH,IAAd,CAAmBM,YAApB,CAAR;AACD,GAXD;AAaA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAElB,GAAZ;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzBD;;AA2BA,eAAeG,KAAf","sourcesContent":["import { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport { Container } from \"../components/Container\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { url } from \"../utils/loginUrl\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n// import { authenticationLogin } from \"../utils/authenticationLogin\";\n\nconst Index = () => {\n\n  const [token, setToken] = useState('');\n\n  axios('https://accounts.spotify.com/authorize/token', {\n    headers: {\n      'Content-Type' : 'application/x-www-form-urlencoded',\n      'Authorization' : 'Basic' + btoa(process.env.CLIENT_ID + ':' + process.env.CLIENT_SECRET)\n    },\n    data: 'grant_type=client_credentials',\n    method: 'POST'\n  })\n  .then(tokenResponse => {\n    console.log(tokenResponse.data.access_token);\n    setToken(tokenResponse.data.access_token);\n  })\n\n  return (\n    <Container height=\"100vh\">\n      <DarkModeSwitch />\n      <Link href={url}>\n        <Button>login</Button>\n      </Link>\n    </Container>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}
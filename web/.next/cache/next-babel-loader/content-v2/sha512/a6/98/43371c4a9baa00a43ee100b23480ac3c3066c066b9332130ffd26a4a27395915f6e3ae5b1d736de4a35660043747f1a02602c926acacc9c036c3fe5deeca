{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\n\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.access_token;\n  const {\n    0: name,\n    1: setName\n  } = useState(null);\n  const {\n    0: podcast,\n    1: setPodcast\n  } = useState({}); // const podcasts = async () => {\n  //     const response = await fetch(\n  //       `http://localhost:8080/podcast?access_token=${tokenCode}`\n  //     );\n  //     // const data = await response.json();\n  //     // setPodcast(response);\n  //     console.log(response)\n  // }\n\n  useEffect(() => {\n    const fetchdata = async () => {\n      const response = await fetch(`http://localhost:8080/podcast?access_token=${tokenCode}`);\n      const data = await response.json();\n      const [show] = data.data;\n      setPodcast(show);\n    };\n  }, []);\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(res => {\n    console.log(res);\n    const resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: podcast ? podcast : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useEffect","useState","Container","Spotify","NavBar","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","podcast","setPodcast","fetchdata","response","fetch","data","json","show","console","log","setAccessToken","getMe","then","res","resName","display_name"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIN,OAAJ,EAAnB;AACA,QAAMO,SAAS,GAAGH,KAAK,CAACI,YAAxB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAA4B,IAA5B,CAAhC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,EAAD,CAAtC,CANiB,CAQjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8CAA6CR,SAAU,EAD9B,CAA5B;AAGA,YAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,YAAM,CAACC,IAAD,IAASF,IAAI,CAACA,IAApB;AACAJ,MAAAA,UAAU,CAACM,IAAD,CAAV;AACD,KAPD;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,MAAI,OAAOX,SAAP,IAAoB,QAAxB,EAAkC;AAChCY,IAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ,EAAuB,WAAvB;AACD,GAFD,MAEO;AACL,WAAO,0BAAP;AACD;;AAEDD,EAAAA,UAAU,CAACe,cAAX,CAA0Bd,SAA1B;AAEAD,EAAAA,UAAU,CAACgB,KAAX,GAAmBC,IAAnB,CAAyBC,GAAD,IAAS;AAC/BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,UAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACAhB,IAAAA,OAAO,CAACe,OAAD,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,YAAhB;AACD,GALD;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEjB;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGE,OAAO,GAAGA,OAAH,GAAa;AADvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnDD;;AAqDA,eAAeT,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n  const [podcast, setPodcast] = useState({});\r\n\r\n  // const podcasts = async () => {\r\n  //     const response = await fetch(\r\n  //       `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n  //     );\r\n  //     // const data = await response.json();\r\n  //     // setPodcast(response);\r\n  //     console.log(response)\r\n  // }\r\n\r\n  useEffect(() => {\r\n    const fetchdata = async () => {\r\n      const response = await fetch(\r\n        `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n      );\r\n      const data = await response.json();\r\n      const [show] = data.data;\r\n      setPodcast(show)\r\n    };\r\n  }, []);\r\n\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n      <div>\r\n        {podcast ? podcast : null}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
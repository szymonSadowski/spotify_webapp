{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\nimport { useFetch } from \"../utils/useFetch\";\n\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.access_token;\n  const {\n    0: name,\n    1: setName\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    data\n  } = useFetch(tokenCode);\n  const ids = Object.values(data);\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(res => {\n    console.log(res);\n    const resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n\n  if (ids.length > 1) {\n    spotifyApi.getShows(ids).then(res => {\n      setLoading(false);\n    });\n  } else {\n    console.log(loading);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" loading \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useState","Container","Spotify","NavBar","useFetch","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","loading","setLoading","data","ids","Object","values","console","log","setAccessToken","getMe","then","res","resName","display_name","length","getShows"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAIA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIP,OAAJ,EAAnB;AACA,QAAMQ,SAAS,GAAGH,KAAK,CAACI,YAAxB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAA4B,IAA5B,CAAhC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAWZ,QAAQ,CAACM,SAAD,CAAzB;AACA,QAAMO,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAcH,IAAd,CAAZ;;AAGA,MAAI,OAAON,SAAP,IAAoB,QAAxB,EAAkC;AAChCU,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ,EAAuB,WAAvB;AACD,GAFD,MAEO;AACL,WAAO,0BAAP;AACD;;AAEDD,EAAAA,UAAU,CAACa,cAAX,CAA0BZ,SAA1B;AAEAD,EAAAA,UAAU,CAACc,KAAX,GAAmBC,IAAnB,CAAyBC,GAAD,IAAS;AAC/BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,UAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACAd,IAAAA,OAAO,CAACa,OAAD,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,YAAhB;AACD,GALD;;AAME,MAAGV,GAAG,CAACW,MAAJ,GAAa,CAAhB,EAAoB;AAClBnB,IAAAA,UAAU,CAACoB,QAAX,CAAoBZ,GAApB,EAAyBO,IAAzB,CAA+BC,GAAD,IAAS;AACrCV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD;AAGD,GAJD,MAIO;AACLK,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACD;;AAGH,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YADF,EAEGE,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAxCD;;AA0CA,eAAeT,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport { useFetch } from \"../utils/useFetch\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token as string;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const { data } = useFetch(tokenCode);\r\n  const ids = Object.values(data as string);\r\n\r\n\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n    if(ids.length > 1 ) {\r\n      spotifyApi.getShows(ids).then((res) => {\r\n        setLoading(false);\r\n      })\r\n    } else {\r\n      console.log(loading)\r\n    }\r\n  \r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n      {loading ? <div> loading </div> : <div>data</div>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\n\nvar useFetch = function useFetch(tokenCode) {\n  _s();\n\n  console.log(tokenCode);\n\n  var _useState = useState({}),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchdata = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, dataResponse, myData, idData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:8080/podcast?access_token=\".concat(tokenCode));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                dataResponse = _context.sent;\n                // const item = dataResponse.results[0];\n                myData = Object.keys(dataResponse).map(function (key) {\n                  return dataResponse[key];\n                }); // console.log(myData[0].show.id)\n\n                idData = myData.map(function (data) {\n                  return data.show.id;\n                });\n                console.log(idData, 'idData');\n                setData(idData);\n                console.log(dataResponse);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchdata() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchdata();\n  }, [tokenCode]);\n  return {\n    data: data,\n    loading: loading\n  };\n};\n\n_s(useFetch, \"+2Aek85bYeV0JwBHRmtAxqiaVyE=\");\n\nvar Home = function Home() {\n  _s2();\n\n  var router = useRouter();\n  var token = router.query;\n  var spotifyApi = new Spotify();\n  var tokenCode = token.access_token;\n\n  var _useState3 = useState(null),\n      name = _useState3[0],\n      setName = _useState3[1]; // const {data, loading} = useFetch(tokenCode)\n\n\n  var _useFetch = useFetch(tokenCode),\n      data = _useFetch.data;\n\n  var ids = Object.values(data);\n  console.log(ids);\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(function (res) {\n    console.log(res);\n    var resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  spotifyApi.getShows(ids);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(Home, \"UqU2tZUJXsq+FVl1dt6d7cPsDFo=\", false, function () {\n  return [useRouter, useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useEffect","useState","Container","Spotify","NavBar","useFetch","tokenCode","console","log","data","setData","loading","setLoading","fetchdata","fetch","response","json","dataResponse","myData","Object","keys","map","key","idData","show","id","Home","router","token","query","spotifyApi","access_token","name","setName","ids","values","setAccessToken","getMe","then","res","resName","display_name","getShows"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetch = (tokenCode: string) => {\r\n  console.log(tokenCode);\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchdata = async () => {\r\n      const response = await fetch(\r\n        `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n      );\r\n      const dataResponse = await response.json();\r\n      // const item = dataResponse.results[0];\r\n      const myData = Object.keys(dataResponse).map(key => {\r\n        return dataResponse[key];\r\n      });\r\n      // console.log(myData[0].show.id)\r\n      const idData = myData.map(data => {\r\n        return data.show.id as string;\r\n      })\r\n      console.log(idData, 'idData')\r\n      setData(idData);\r\n      console.log(dataResponse);\r\n    };\r\n    fetchdata();\r\n  }, [tokenCode]);\r\n  return { data, loading };\r\n};\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token as string;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n  // const {data, loading} = useFetch(tokenCode)\r\n  const { data } = useFetch(tokenCode);\r\n\r\n  const ids = Object.values(data as string);\r\n\r\n  console.log(ids);\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n  spotifyApi.getShows(ids)\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
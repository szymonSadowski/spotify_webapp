{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\nimport axios from \"axios\";\n\nvar Home = function Home() {\n  _s();\n\n  var router = useRouter();\n  var token = router.query;\n  var spotifyApi = new Spotify();\n  var tokenCode = token.access_token;\n\n  var _useState = useState(null),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState({}),\n      podcast = _useState2[0],\n      setPodcast = _useState2[1];\n\n  useEffect(function () {\n    var podcasts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:8080/podcast?access_token=\".concat(tokenCode)).then(function (res) {\n                  console.log(res);\n                  setPodcast(res);\n                });\n\n              case 2:\n                console.log(podcast, \"poodcasts\");\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function podcasts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    podcasts();\n  }, []);\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  useEffect(function () {\n    var podcasts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return axios.get(\"http://localhost:8080/podcast?access_token=\".concat(tokenCode));\n\n              case 2:\n                result = _context2.sent;\n                setPodcast(result.data);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function podcasts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    console.log(podcasts, \"podcasts did mount\");\n  }, []);\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(function (res) {\n    console.log(res);\n    var resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"qB5YH6swmiHH/FArMVe27KHGUqw=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useEffect","useState","Container","Spotify","NavBar","axios","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","podcast","setPodcast","podcasts","get","then","res","console","log","result","data","setAccessToken","getMe","resName","display_name"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,MAAMU,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,MAAMC,UAAU,GAAG,IAAIP,OAAJ,EAAnB;AACA,MAAMQ,SAAS,GAAGH,KAAK,CAACI,YAAxB;;AAJiB,kBAKOX,QAAQ,CAA4B,IAA5B,CALf;AAAA,MAKVY,IALU;AAAA,MAKJC,OALI;;AAAA,mBAMab,QAAQ,CAAC,EAAD,CANrB;AAAA,MAMVc,OANU;AAAA,MAMDC,UANC;;AAQjBhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,QAAQ;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACTZ,KAAK,CACRa,GADG,sDAC+CP,SAD/C,GAEHQ,IAFG,CAEE,UAACC,GAAD,EAAS;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,kBAAAA,UAAU,CAACI,GAAD,CAAV;AACD,iBALG,CADS;;AAAA;AAOfC,gBAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqB,WAArB;;AAPe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAARE,QAAQ;AAAA;AAAA;AAAA,OAAd;;AASAA,IAAAA,QAAQ;AACT,GAXQ,EAWN,EAXM,CAAT;;AAcA,MAAI,OAAON,SAAP,IAAoB,QAAxB,EAAkC;AAChCU,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ,EAAuB,WAAvB;AACD,GAFD,MAEO;AACL,WAAO,0BAAP;AACD;;AACDX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMiB,QAAQ;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACMZ,KAAK,CAACa,GAAN,sDAC2BP,SAD3B,EADN;;AAAA;AACTY,gBAAAA,MADS;AAIfP,gBAAAA,UAAU,CAACO,MAAM,CAACC,IAAR,CAAV;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAARP,QAAQ;AAAA;AAAA;AAAA,OAAd;;AAMAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsB,oBAAtB;AACD,GARQ,EAQN,EARM,CAAT;AASAP,EAAAA,UAAU,CAACe,cAAX,CAA0Bd,SAA1B;AAEAD,EAAAA,UAAU,CAACgB,KAAX,GAAmBP,IAAnB,CAAwB,UAACC,GAAD,EAAS;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,QAAMO,OAAO,GAAGP,GAAG,CAACQ,YAApB;AACAd,IAAAA,OAAO,CAACa,OAAD,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACQ,YAAhB;AACD,GALD;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEf;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAlDD;;GAAMP,I;UACWR,S;;;KADXQ,I;AAoDN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n  const [podcast, setPodcast] = useState({});\r\n\r\n  useEffect(() => {\r\n    const podcasts = async () => {\r\n      await axios\r\n        .get(`http://localhost:8080/podcast?access_token=${tokenCode}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setPodcast(res);\r\n        });\r\n      console.log(podcast, \"poodcasts\");\r\n    };\r\n    podcasts();\r\n  }, []);\r\n\r\n  \r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n  useEffect(() => {\r\n    const podcasts = async () => {\r\n      const result = await axios.get(\r\n        `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n      );\r\n      setPodcast(result.data);\r\n    };\r\n    console.log(podcasts, \"podcasts did mount\");\r\n  }, []);\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
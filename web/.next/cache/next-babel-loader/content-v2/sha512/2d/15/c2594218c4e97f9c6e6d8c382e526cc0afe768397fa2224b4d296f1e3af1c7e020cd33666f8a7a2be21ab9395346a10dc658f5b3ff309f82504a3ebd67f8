{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\n\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.access_token;\n  const {\n    0: name,\n    1: setName\n  } = useState(null);\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n\n    const podcasts = async () => {\n      await fetch('http://example.com/movies.json');\n    };\n  } else {\n    return \"Token access not granted\";\n  }\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(res => {\n    console.log(res);\n    const resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useState","Container","Spotify","NavBar","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","console","log","podcasts","fetch","setAccessToken","getMe","then","res","resName","display_name"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAGA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIN,OAAJ,EAAnB;AACA,QAAMO,SAAS,GAAGH,KAAK,CAACI,YAAxB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBZ,QAAQ,CAA4B,IAA5B,CAAhC;;AAEA,MAAI,OAAOS,SAAP,IAAoB,QAAxB,EAAkC;AAChCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAAuB,WAAvB;;AACA,UAAMM,QAAQ,GAAG,YAAW;AAC1B,YAAMC,KAAK,CAAC,gCAAD,CAAX;AACD,KAFD;AAGD,GALD,MAKO;AACL,WAAO,0BAAP;AACD;;AAGDR,EAAAA,UAAU,CAACS,cAAX,CAA0BR,SAA1B;AAEAD,EAAAA,UAAU,CAACU,KAAX,GAAmBC,IAAnB,CAAyBC,GAAD,IAAS;AAC/BP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,UAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACAV,IAAAA,OAAO,CAACS,OAAD,CAAP;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACE,YAAhB;AACD,GALD;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEX;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/BD;;AAiCA,eAAeP,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n    const podcasts = async() => {\r\n      await fetch('http://example.com/movies.json')\r\n    }\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Container } from \"../components/Container\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport Spotify from \"spotify-web-api-js\";\n\n// import { getAccesstoken } from \"../utils/getAccessToken\";\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.access_token;\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  spotifyApi.setAccessToken(tokenCode);\n\n  const getMe = async () => {\n    spotifyApi.getMe().then(res => {\n      const resName = res.display_name;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: resName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tokenCode ? spotifyApi.getMe().then(res => {\n        const resName = res.display_name;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: resName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nie ma nazwy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","Container","DarkModeSwitch","Spotify","Home","router","token","query","spotifyApi","tokenCode","access_token","console","log","setAccessToken","getMe","then","res","resName","display_name"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIL,OAAJ,EAAnB;AACA,QAAMM,SAAS,GAAGH,KAAK,CAACI,YAAxB;;AACA,MAAI,OAAOD,SAAP,IAAoB,QAAxB,EAAkC;AAChCE,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ,EAAuB,WAAvB;AACD,GAFD,MAEO;AACL,WAAO,0BAAP;AACD;;AACDD,EAAAA,UAAU,CAACK,cAAX,CAA0BJ,SAA1B;;AAEA,QAAMK,KAAK,GAAG,YAAY;AACxBN,IAAAA,UAAU,CAACM,KAAX,GAAmBC,IAAnB,CAAyBC,GAAD,IAAS;AAC/B,YAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACA,0BAAO;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHD;AAID,GALD;;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGR,SAAS,GACTD,UAAU,CAACM,KAAX,GAAmBC,IAAnB,CAAyBC,GAAD,IAAS;AAC9B,cAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACA,4BAAO;AAAA,oBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAHF,CADS,gBAMR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjCD;;AAmCA,eAAeb,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { stringify } from \"query-string\";\r\n// import { getAccesstoken } from \"../utils/getAccessToken\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  const getMe = async () => {\r\n    spotifyApi.getMe().then((res) => {\r\n      const resName = res.display_name as string;\r\n      return <div>{resName}</div>;\r\n    });\r\n  };\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n      <div>\r\n        {tokenCode ? (\r\n         spotifyApi.getMe().then((res) => {\r\n            const resName = res.display_name as string;\r\n            return <div>{resName}</div>;\r\n          })\r\n        ) : (\r\n          <p>Nie ma nazwy</p>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
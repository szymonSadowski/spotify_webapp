{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\n\nvar Home = function Home() {\n  _s();\n\n  var router = useRouter();\n  var token = router.query;\n  var spotifyApi = new Spotify();\n\n  var tokenCode = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              token.access_token;\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function tokenCode() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState(null),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState({}),\n      podcast = _useState2[0],\n      setPodcast = _useState2[1];\n\n  var podcasts = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var response, data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return fetch(\"http://localhost:8080/podcast?access_token=\".concat(tokenCode));\n\n            case 3:\n              response = _context2.sent;\n              _context2.next = 6;\n              return response.json();\n\n            case 6:\n              data = _context2.sent;\n              setPodcast(response);\n              console.log(podcast);\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }));\n\n    return function podcasts() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    podcasts();\n    console.log(podcast);\n  }, [tokenCode]); // if (typeof tokenCode == \"string\") {\n  //   console.log(tokenCode, \"tokenCode\");\n  // } else {\n  //   return \"Token access not granted\";\n  // }\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(function (res) {\n    console.log(res);\n    var resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"DXKJeE+GA2Cbf+DjP1G6dVTDCw8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useEffect","useState","Container","Spotify","NavBar","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","podcast","setPodcast","podcasts","fetch","response","json","data","console","log","setAccessToken","getMe","then","res","resName","display_name"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMS,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,MAAMC,UAAU,GAAG,IAAIN,OAAJ,EAAnB;;AACA,MAAMO,SAAS;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAChBH,cAAAA,KAAK,CAACI,YAAN;;AADgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATD,SAAS;AAAA;AAAA;AAAA,KAAf;;AAJiB,kBAOOT,QAAQ,CAA4B,IAA5B,CAPf;AAAA,MAOVW,IAPU;AAAA,MAOJC,OAPI;;AAAA,mBAQaZ,QAAQ,CAAC,EAAD,CARrB;AAAA,MAQVa,OARU;AAAA,MAQDC,UARC;;AAUjB,MAAMC,QAAQ;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEUC,KAAK,sDACoBP,SADpB,EAFf;;AAAA;AAEPQ,cAAAA,QAFO;AAAA;AAAA,qBAKMA,QAAQ,CAACC,IAAT,EALN;;AAAA;AAKPC,cAAAA,IALO;AAMbL,cAAAA,UAAU,CAACG,QAAD,CAAV;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAPa;AAAA;;AAAA;AAAA;AAAA;AASbO,cAAAA,OAAO,CAACC,GAAR;;AATa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARN,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAaAhB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,QAAQ;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,GAHQ,EAGN,CAACJ,SAAD,CAHM,CAAT,CAvBiB,CA4BjB;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,UAAU,CAACc,cAAX,CAA0Bb,SAA1B;AAEAD,EAAAA,UAAU,CAACe,KAAX,GAAmBC,IAAnB,CAAwB,UAACC,GAAD,EAAS;AAC/BL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,QAAMC,OAAO,GAAGD,GAAG,CAACE,YAApB;AACAf,IAAAA,OAAO,CAACc,OAAD,CAAP;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACE,YAAhB;AACD,GALD;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEhB;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAhDD;;GAAMP,I;UACWP,S;;;KADXO,I;AAkDN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = async() => {\r\n    token.access_token;\r\n  }  \r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n  const [podcast, setPodcast] = useState({});\r\n\r\n  const podcasts = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n      );\r\n      const data = await response.json();\r\n      setPodcast(response);\r\n      console.log(podcast)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    podcasts();\r\n    console.log(podcast)\r\n  }, [tokenCode]);\r\n\r\n  // if (typeof tokenCode == \"string\") {\r\n  //   console.log(tokenCode, \"tokenCode\");\r\n  // } else {\r\n  //   return \"Token access not granted\";\r\n  // }\r\n\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
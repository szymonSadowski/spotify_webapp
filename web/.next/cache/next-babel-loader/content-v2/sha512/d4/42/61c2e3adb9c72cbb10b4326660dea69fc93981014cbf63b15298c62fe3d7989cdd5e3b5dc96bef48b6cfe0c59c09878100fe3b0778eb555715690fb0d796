{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\nimport axios from \"axios\";\n\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.access_token;\n  const {\n    0: name,\n    1: setName\n  } = useState(null);\n  const {\n    0: podcast,\n    1: setPodcast\n  } = useState({});\n  useEffect(() => {\n    const podcasts = async () => {\n      await axios.get(`http://localhost:8080/podcast?access_token=${tokenCode}`).then(res => {\n        console.log(res);\n        setPodcast(res);\n      });\n      console.log(podcast, \"poodcasts\");\n    };\n\n    podcasts();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`http://localhost:8080/podcast?access_token=${tokenCode}`);\n      setPodcast(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\");\n  } else {\n    return \"Token access not granted\";\n  } // useEffect(() => {\n  //   const podcasts = async () => {\n  //     const result = await axios.get(\n  //       `http://localhost:8080/podcast?access_token=${tokenCode}`\n  //     );\n  //     setPodcast(result.data);\n  //   };\n  //   console.log(podcasts, \"podcasts did mount\");\n  // }, []);\n  // console.log(getPodcasts);\n\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(res => {\n    console.log(res);\n    const resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useEffect","useState","Container","Spotify","NavBar","axios","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","podcast","setPodcast","podcasts","get","then","res","console","log","fetchData","result","data","setAccessToken","getMe","resName","display_name"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIP,OAAJ,EAAnB;AACA,QAAMQ,SAAS,GAAGH,KAAK,CAACI,YAAxB;AACA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAA4B,IAA5B,CAAhC;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,QAAQ,GAAG,YAAY;AAC3B,YAAMZ,KAAK,CACRa,GADG,CACE,8CAA6CP,SAAU,EADzD,EAEHQ,IAFG,CAEGC,GAAD,IAAS;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,QAAAA,UAAU,CAACI,GAAD,CAAV;AACD,OALG,CAAN;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAqB,WAArB;AACD,KARD;;AASAE,IAAAA,QAAQ;AACT,GAXQ,EAWN,EAXM,CAAT;AAaAjB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuB,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMnB,KAAK,CACvB,8CAA6CM,SAAU,EADhC,CAA1B;AAGAK,MAAAA,UAAU,CAACQ,MAAM,CAACC,IAAR,CAAV;AACD,KALD;;AAOAF,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;;AAYA,MAAI,OAAOZ,SAAP,IAAoB,QAAxB,EAAkC;AAChCU,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ,EAAuB,WAAvB;AACD,GAFD,MAEO;AACL,WAAO,0BAAP;AACD,GArCgB,CAsCjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAD,EAAAA,UAAU,CAACgB,cAAX,CAA0Bf,SAA1B;AAEAD,EAAAA,UAAU,CAACiB,KAAX,GAAmBR,IAAnB,CAAyBC,GAAD,IAAS;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,UAAMQ,OAAO,GAAGR,GAAG,CAACS,YAApB;AACAf,IAAAA,OAAO,CAACc,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACS,YAAhB;AACD,GALD;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEhB;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9DD;;AAgEA,eAAeP,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n  const [podcast, setPodcast] = useState({});\r\n\r\n  useEffect(() => {\r\n    const podcasts = async () => {\r\n      await axios\r\n        .get(`http://localhost:8080/podcast?access_token=${tokenCode}`)\r\n        .then((res) => {\r\n          console.log(res);\r\n          setPodcast(res);\r\n        });\r\n      console.log(podcast, \"poodcasts\");\r\n    };\r\n    podcasts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios(\r\n        `http://localhost:8080/podcast?access_token=${tokenCode}`,\r\n      );\r\n      setPodcast(result.data);\r\n    };\r\n \r\n    fetchData();\r\n  }, []);\r\n\r\n\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n  // useEffect(() => {\r\n  //   const podcasts = async () => {\r\n  //     const result = await axios.get(\r\n  //       `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n  //     );\r\n  //     setPodcast(result.data);\r\n  //   };\r\n  //   console.log(podcasts, \"podcasts did mount\");\r\n  // }, []);\r\n  // console.log(getPodcasts);\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
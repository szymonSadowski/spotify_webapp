{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Container } from \"../components/Container\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport Spotify from \"spotify-web-api-js\";\n\n// import { getAccesstoken } from \"../utils/getAccessToken\";\nvar Home = function Home() {\n  _s();\n\n  var router = useRouter();\n  var token = router.query;\n  var spotifyApi = new Spotify();\n  var tokenCode = token.code;\n\n  var getAccesstoken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // await axios({\n              //   method: 'POST',\n              //   url:'https://accounts.spotify.com/api/token',\n              //   headers: {\n              //     \"Content-Type\": \"application/x-www-form-urlencoded\",\n              //   },\n              //   params: {\n              //     client_id: process.env.CLIENT_ID,\n              //     client_secret: process.env.CLIENT_SECRET,\n              //     grant_type: 'authorization_code',\n              //     code: tokenCode,\n              //     redirect_uri: 'http://localhost:3000/home/'\n              //   },\n              // })\n              // .then(tokenResponse => {      \n              //  console.log(tokenResponse);\n              // })\n              response = \"$(curl -s https://accounts.spotify.com/api/token       -H \\\"Content-Type:application/x-www-form-urlencoded\\\"       -H \\\"Authorization: Basic $(echo $client_id:$client_secret | base64 | sed 's/K$/=/')\\\"       -d \\\"grant_type=client_credentials\\\")\";\n              console.log(response);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAccesstoken() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (typeof tokenCode == \"string\") {\n    // spotifyApi.setAccessToken(tokenCode);\n    getAccesstoken();\n  } else {\n    return \"Token access not granted\";\n  } // spotifyApi.setAccessToken(token.code);\n\n\n  console.log(token.code);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","Container","DarkModeSwitch","Spotify","Home","router","token","query","spotifyApi","tokenCode","code","getAccesstoken","response","console","log"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,MAAMO,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,MAAMC,UAAU,GAAG,IAAIL,OAAJ,EAAnB;AACA,MAAMM,SAAS,GAAGH,KAAK,CAACI,IAAxB;;AAEA,MAAMC,cAAc;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACMC,cAAAA,QAlBe;AAsBnBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAtBmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdD,cAAc;AAAA;AAAA;AAAA,KAApB;;AAwBA,MAAI,OAAOF,SAAP,IAAoB,QAAxB,EAAkC;AAChC;AACAE,IAAAA,cAAc;AACf,GAHD,MAGO;AACL,WAAO,0BAAP;AACD,GAnCgB,CAqCjB;;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACI,IAAlB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CA7CD;;GAAMN,I;UACWL,S;;;KADXK,I;AA+CN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport axios from \"axios\";\r\n// import { getAccesstoken } from \"../utils/getAccessToken\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.code;\r\n\r\n  const getAccesstoken = async() => {\r\n    // await axios({\r\n    //   method: 'POST',\r\n    //   url:'https://accounts.spotify.com/api/token',\r\n    //   headers: {\r\n    //     \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    //   },\r\n    //   params: {\r\n    //     client_id: process.env.CLIENT_ID,\r\n    //     client_secret: process.env.CLIENT_SECRET,\r\n    //     grant_type: 'authorization_code',\r\n    //     code: tokenCode,\r\n    //     redirect_uri: 'http://localhost:3000/home/'\r\n    //   },\r\n    // })\r\n    // .then(tokenResponse => {      \r\n    //  console.log(tokenResponse);\r\n    // })\r\n    const response=`$(curl -s https://accounts.spotify.com/api/token \\\r\n      -H \"Content-Type:application/x-www-form-urlencoded\" \\\r\n      -H \"Authorization: Basic $(echo $client_id:$client_secret | base64 | sed 's/K$/=/')\" \\\r\n      -d \"grant_type=client_credentials\")`\r\n      console.log(response)\r\n  }\r\n  if (typeof tokenCode == \"string\") {\r\n    // spotifyApi.setAccessToken(tokenCode);\r\n    getAccesstoken();\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  // spotifyApi.setAccessToken(token.code);\r\n  console.log(token.code);\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
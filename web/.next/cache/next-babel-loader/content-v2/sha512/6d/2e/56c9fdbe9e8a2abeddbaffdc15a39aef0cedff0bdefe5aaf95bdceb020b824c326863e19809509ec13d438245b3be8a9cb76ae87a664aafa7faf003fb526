{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Container } from \"../components/Container\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport Spotify from \"spotify-web-api-js\";\nimport axios from \"axios\"; // import { getAccesstoken } from \"../utils/getAccessToken\";\n\nconst Home = () => {\n  const router = useRouter();\n  const token = router.query;\n  const spotifyApi = new Spotify();\n  const tokenCode = token.code;\n\n  const getAccesstoken = async () => {\n    axios('https://accounts.spotify.com/api/token', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        \"Accept\": \"application/json\"\n      },\n      params: {\n        client_id: process.env.CLIENT_ID,\n        client_secret: process.env.CLIENT_SECRET,\n        grant_type: 'authorization_code',\n        code: token,\n        redirect_uri: 'http://localhost:3000/home/'\n      }\n    }).then(tokenResponse => {\n      console.log(tokenResponse);\n    });\n  };\n\n  if (typeof tokenCode == \"string\") {\n    spotifyApi.setAccessToken(tokenCode);\n    getAccesstoken();\n  } else {\n    return \"Token access not granted\";\n  } // spotifyApi.setAccessToken(token.code);\n\n\n  console.log(token.code);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","Container","DarkModeSwitch","Spotify","axios","Home","router","token","query","spotifyApi","tokenCode","code","getAccesstoken","method","headers","params","client_id","process","env","CLIENT_ID","client_secret","CLIENT_SECRET","grant_type","redirect_uri","then","tokenResponse","console","log","setAccessToken"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,QAAMC,UAAU,GAAG,IAAIN,OAAJ,EAAnB;AACA,QAAMO,SAAS,GAAGH,KAAK,CAACI,IAAxB;;AAEA,QAAMC,cAAc,GAAG,YAAW;AAChCR,IAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9CS,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,mCADT;AAEP,kBAAU;AAFH,OAFqC;AAM9CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADjB;AAENC,QAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,aAFrB;AAGNC,QAAAA,UAAU,EAAE,oBAHN;AAINX,QAAAA,IAAI,EAAEJ,KAJA;AAKNgB,QAAAA,YAAY,EAAE;AALR;AANsC,KAA3C,CAAL,CAcCC,IAdD,CAcMC,aAAa,IAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,KAhBD;AAiBD,GAlBD;;AAmBA,MAAI,OAAOf,SAAP,IAAoB,QAAxB,EAAkC;AAChCD,IAAAA,UAAU,CAACmB,cAAX,CAA0BlB,SAA1B;AACAE,IAAAA,cAAc;AACf,GAHD,MAGO;AACL,WAAO,0BAAP;AACD,GA9BgB,CAgCjB;;;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAK,CAACI,IAAlB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;AA0CA,eAAeN,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport axios from \"axios\";\r\n// import { getAccesstoken } from \"../utils/getAccessToken\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.code;\r\n\r\n  const getAccesstoken = async() => {\r\n    axios('https://accounts.spotify.com/api/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Accept\": \"application/json\",\r\n      },\r\n      params: {\r\n        client_id: process.env.CLIENT_ID,\r\n        client_secret: process.env.CLIENT_SECRET,\r\n        grant_type: 'authorization_code',\r\n        code: token,\r\n        redirect_uri: 'http://localhost:3000/home/'\r\n      },\r\n    })\r\n    .then(tokenResponse => {      \r\n     console.log(tokenResponse);\r\n    })\r\n  }\r\n  if (typeof tokenCode == \"string\") {\r\n    spotifyApi.setAccessToken(tokenCode);\r\n    getAccesstoken();\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  // spotifyApi.setAccessToken(token.code);\r\n  console.log(token.code);\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
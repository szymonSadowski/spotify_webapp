{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { Container } from \"../components/Container\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport Spotify from \"spotify-web-api-js\";\nimport axios from \"axios\"; // import { getAccesstoken } from \"../utils/getAccessToken\";\n\nvar Home = function Home() {\n  _s();\n\n  var router = useRouter();\n  var token = router.query;\n  var spotifyApi = new Spotify();\n  var tokenCode = token.code;\n\n  var getAccesstoken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axios('https://accounts.spotify.com/api/token', {\n                method: 'POST',\n                headers: {\n                  'content-type': 'application/x-www-form-urlencoded',\n                  'Authorization': 'Basic ' + btoa(process.env.CLIENT_ID + ':' + process.env.CLIENT_SECRET)\n                },\n                data: {\n                  grant_type: 'authorization_code',\n                  code: 'code=' + tokenCode,\n                  redirect_uri: 'http://localhost:3000/home/'\n                }\n              }).then(function (tokenResponse) {\n                console.log(tokenResponse);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAccesstoken() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (typeof tokenCode == \"string\") {\n    spotifyApi.setAccessToken(tokenCode);\n    getAccesstoken();\n  } else {\n    return \"Token access not granted\";\n  } // spotifyApi.setAccessToken(token.code);\n\n\n  console.log(token.code);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","Container","DarkModeSwitch","Spotify","axios","Home","router","token","query","spotifyApi","tokenCode","code","getAccesstoken","method","headers","btoa","process","env","CLIENT_ID","CLIENT_SECRET","data","grant_type","redirect_uri","then","tokenResponse","console","log","setAccessToken"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,cAAT,QAA+B,8BAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAMQ,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,MAAMC,UAAU,GAAG,IAAIN,OAAJ,EAAnB;AACA,MAAMO,SAAS,GAAGH,KAAK,CAACI,IAAxB;;AAEA,MAAMC,cAAc;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACrBR,cAAAA,KAAK,CAAC,wCAAD,EAA2C;AAC9CS,gBAAAA,MAAM,EAAE,MADsC;AAE9CC,gBAAAA,OAAO,EAAE;AACP,kCAAgB,mCADT;AAEP,mCAAkB,WAAWC,IAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,SAAZ,GAAwB,GAAxB,GAA8BF,OAAO,CAACC,GAAR,CAAYE,aAA3C;AAF1B,iBAFqC;AAM9CC,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,UAAU,EAAE,oBADR;AAEJV,kBAAAA,IAAI,EAAE,UAAUD,SAFZ;AAGJY,kBAAAA,YAAY,EAAE;AAHV;AANwC,eAA3C,CAAL,CAYCC,IAZD,CAYM,UAAAC,aAAa,EAAI;AACtBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,eAdD;;AADqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdZ,cAAc;AAAA;AAAA;AAAA,KAApB;;AAiBA,MAAI,OAAOF,SAAP,IAAoB,QAAxB,EAAkC;AAChCD,IAAAA,UAAU,CAACkB,cAAX,CAA0BjB,SAA1B;AACAE,IAAAA,cAAc;AACf,GAHD,MAGO;AACL,WAAO,0BAAP;AACD,GA5BgB,CA8BjB;;;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACI,IAAlB;AAEA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAtCD;;GAAMN,I;UACWN,S;;;KADXM,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport axios from \"axios\";\r\n// import { getAccesstoken } from \"../utils/getAccessToken\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.code;\r\n\r\n  const getAccesstoken = async() => {\r\n    axios('https://accounts.spotify.com/api/token', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded',\r\n        'Authorization' : 'Basic ' + btoa(process.env.CLIENT_ID + ':' + process.env.CLIENT_SECRET)      \r\n      },\r\n      data: {\r\n        grant_type: 'authorization_code',\r\n        code: 'code=' + tokenCode,\r\n        redirect_uri: 'http://localhost:3000/home/'\r\n      },\r\n    })\r\n    .then(tokenResponse => {      \r\n     console.log(tokenResponse);\r\n    })\r\n}\r\n  if (typeof tokenCode == \"string\") {\r\n    spotifyApi.setAccessToken(tokenCode);\r\n    getAccesstoken();\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  // spotifyApi.setAccessToken(token.code);\r\n  console.log(token.code);\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <DarkModeSwitch />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\home.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport { Container } from \"../components/Container\";\nimport Spotify from \"spotify-web-api-js\";\nimport { NavBar } from \"../components/NavBar\";\nimport axios from \"axios\";\n\nvar Home = function Home() {\n  _s();\n\n  var router = useRouter();\n  var token = router.query;\n  var spotifyApi = new Spotify();\n  var tokenCode = token.access_token;\n\n  var _useState = useState(null),\n      name = _useState[0],\n      setName = _useState[1];\n\n  if (typeof tokenCode == \"string\") {\n    console.log(tokenCode, \"tokenCode\"); // const podcasts = async () => {\n    //   await fetch(\n    //     `localhost:8080/podcast?access_token=${tokenCode}`\n    //   ).then((response) => console.log(response, \" response\"));\n    // };\n\n    axios.get(\"http://localhost:8080/podcast?access_token=\".concat(tokenCode)).then(function (res) {\n      console.log(res);\n    });\n    console.log(\"localhost:8080/podcast?access_token=\".concat(tokenCode), \" podcasts\");\n  } else {\n    return \"Token access not granted\";\n  }\n\n  spotifyApi.setAccessToken(tokenCode);\n  spotifyApi.getMe().then(function (res) {\n    console.log(res);\n    var resName = res.display_name;\n    setName(resName);\n    console.log(res.display_name);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(NavBar, {\n      name: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"ahv9Msc75JY4SnRw7Cu+ixvTs7U=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/home.tsx"],"names":["useRouter","React","useState","Container","Spotify","NavBar","axios","Home","router","token","query","spotifyApi","tokenCode","access_token","name","setName","console","log","get","then","res","setAccessToken","getMe","resName","display_name"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMS,KAAK,GAAGD,MAAM,CAACE,KAArB;AACA,MAAMC,UAAU,GAAG,IAAIP,OAAJ,EAAnB;AACA,MAAMQ,SAAS,GAAGH,KAAK,CAACI,YAAxB;;AAJiB,kBAKOX,QAAQ,CAA4B,IAA5B,CALf;AAAA,MAKVY,IALU;AAAA,MAKJC,OALI;;AAOjB,MAAI,OAAOH,SAAP,IAAoB,QAAxB,EAAkC;AAChCI,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ,EAAuB,WAAvB,EADgC,CAEhC;AACA;AACA;AACA;AACA;;AAEEN,IAAAA,KAAK,CAACY,GAAN,sDAAwDN,SAAxD,GAAqEO,IAArE,CAA0E,UAACC,GAAD,EAAQ;AAChFJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAFD;AAIFJ,IAAAA,OAAO,CAACC,GAAR,+CAAmDL,SAAnD,GAAgE,WAAhE;AACD,GAbD,MAaO;AACL,WAAO,0BAAP;AACD;;AAEDD,EAAAA,UAAU,CAACU,cAAX,CAA0BT,SAA1B;AAEAD,EAAAA,UAAU,CAACW,KAAX,GAAmBH,IAAnB,CAAwB,UAACC,GAAD,EAAS;AAC/BJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,QAAMG,OAAO,GAAGH,GAAG,CAACI,YAApB;AACAT,IAAAA,OAAO,CAACQ,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACI,YAAhB;AACD,GALD;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEV;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAtCD;;GAAMP,I;UACWP,S;;;KADXO,I;AAwCN,eAAeA,IAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport React, { useState } from \"react\";\r\nimport { Container } from \"../components/Container\";\r\nimport Spotify from \"spotify-web-api-js\";\r\nimport { NavBar } from \"../components/NavBar\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const router = useRouter();\r\n  const token = router.query;\r\n  const spotifyApi = new Spotify();\r\n  const tokenCode = token.access_token;\r\n  const [name, setName] = useState<string | null | undefined>(null);\r\n\r\n  if (typeof tokenCode == \"string\") {\r\n    console.log(tokenCode, \"tokenCode\");\r\n    // const podcasts = async () => {\r\n    //   await fetch(\r\n    //     `localhost:8080/podcast?access_token=${tokenCode}`\r\n    //   ).then((response) => console.log(response, \" response\"));\r\n    // };\r\n  \r\n      axios.get(`http://localhost:8080/podcast?access_token=${tokenCode}`).then((res) =>{\r\n        console.log(res)\r\n      })\r\n    \r\n    console.log(`localhost:8080/podcast?access_token=${tokenCode}`, \" podcasts\");\r\n  } else {\r\n    return \"Token access not granted\";\r\n  }\r\n\r\n  spotifyApi.setAccessToken(tokenCode);\r\n\r\n  spotifyApi.getMe().then((res) => {\r\n    console.log(res);\r\n    const resName = res.display_name;\r\n    setName(resName);\r\n    console.log(res.display_name);\r\n  });\r\n\r\n  return (\r\n    <Container height=\"100vh\">\r\n      <NavBar name={name} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}
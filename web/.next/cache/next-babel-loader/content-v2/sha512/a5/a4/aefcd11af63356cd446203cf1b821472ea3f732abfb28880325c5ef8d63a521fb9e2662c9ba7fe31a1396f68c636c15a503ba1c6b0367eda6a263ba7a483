{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/szymo/gitRepo/spotify_webapp/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nexport var useFetch = function useFetch(tokenCode) {\n  _s();\n\n  // console.log(tokenCode);\n  var _useState = useState({}),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    var fetchdata = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, dataResponse, myData, idData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(tokenCode !== null || undefined)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                _context.next = 3;\n                return fetch(\"http://localhost:8080/podcast?access_token=\".concat(tokenCode));\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                dataResponse = _context.sent;\n                // const item = dataResponse.results[0];\n                myData = Object.keys(dataResponse).map(function (key) {\n                  return dataResponse[key];\n                }); // console.log(myData[0].show.id)\n\n                idData = myData.map(function (data) {\n                  return data.show.id;\n                });\n                setData(idData);\n                console.log(dataResponse);\n                _context.next = 14;\n                break;\n\n              case 13:\n                setData('Not provided');\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchdata() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchdata();\n  }, [tokenCode]);\n  return {\n    data: data,\n    loading: loading\n  };\n};\n\n_s(useFetch, \"+2Aek85bYeV0JwBHRmtAxqiaVyE=\");","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/utils/useFetch.ts"],"names":["useState","useEffect","useFetch","tokenCode","data","setData","loading","setLoading","fetchdata","undefined","fetch","response","json","dataResponse","myData","Object","keys","map","key","idData","show","id","console","log"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAuB;AAAA;;AAC3C;AAD2C,kBAEnBH,QAAQ,CAAC,EAAD,CAFW;AAAA,MAEpCI,IAFoC;AAAA,MAE9BC,OAF8B;;AAAA,mBAGbL,QAAQ,CAAC,IAAD,CAHK;AAAA,MAGpCM,OAHoC;AAAA,MAG3BC,UAH2B;;AAI3CN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACbL,SAAS,KAAK,IAAd,IAAsBM,SADT;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEWC,KAAK,sDACsBP,SADtB,EAFhB;;AAAA;AAENQ,gBAAAA,QAFM;AAAA;AAAA,uBAKiBA,QAAQ,CAACC,IAAT,EALjB;;AAAA;AAKJC,gBAAAA,YALI;AAMV;AACMC,gBAAAA,MAPI,GAOKC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,GAA1B,CAA8B,UAAAC,GAAG,EAAI;AAClD,yBAAOL,YAAY,CAACK,GAAD,CAAnB;AACD,iBAFc,CAPL,EAUV;;AACMC,gBAAAA,MAXI,GAWKL,MAAM,CAACG,GAAP,CAAW,UAAAb,IAAI,EAAI;AAChC,yBAAOA,IAAI,CAACgB,IAAL,CAAUC,EAAjB;AACD,iBAFc,CAXL;AAcVhB,gBAAAA,OAAO,CAACc,MAAD,CAAP;AACAG,gBAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AAfU;AAAA;;AAAA;AAkBZR,gBAAAA,OAAO,CAAC,cAAD,CAAP;;AAlBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATG,SAAS;AAAA;AAAA;AAAA,OAAf;;AAqBAA,IAAAA,SAAS;AACV,GAvBQ,EAuBN,CAACL,SAAD,CAvBM,CAAT;AAwBA,SAAO;AAAEC,IAAAA,IAAI,EAAJA,IAAF;AAAQE,IAAAA,OAAO,EAAPA;AAAR,GAAP;AACD,CA7BI;;GAAMJ,Q","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (tokenCode: string) => {\r\n    // console.log(tokenCode);\r\n    const [data, setData] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n      const fetchdata = async () => {\r\n        if(tokenCode !== null || undefined) {\r\n            const response = await fetch(\r\n                `http://localhost:8080/podcast?access_token=${tokenCode}`\r\n              );\r\n              const dataResponse = await response.json();\r\n              // const item = dataResponse.results[0];\r\n              const myData = Object.keys(dataResponse).map(key => {\r\n                return dataResponse[key];\r\n              });\r\n              // console.log(myData[0].show.id)\r\n              const idData = myData.map(data => {\r\n                return data.show.id as string;\r\n              })\r\n              setData(idData);\r\n              console.log(dataResponse);\r\n        }\r\n        else {\r\n            setData('Not provided');\r\n        }\r\n      };\r\n      fetchdata();\r\n    }, [tokenCode]);\r\n    return { data, loading };\r\n  };"]},"metadata":{},"sourceType":"module"}
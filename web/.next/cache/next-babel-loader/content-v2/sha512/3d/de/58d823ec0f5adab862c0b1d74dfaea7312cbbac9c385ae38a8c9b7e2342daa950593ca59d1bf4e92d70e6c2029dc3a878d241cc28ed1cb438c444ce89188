{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\szymo\\\\gitRepo\\\\spotify_webapp\\\\web\\\\src\\\\pages\\\\index.tsx\";\nimport { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport { Container } from \"../components/Container\";\nimport { Button } from \"@chakra-ui/react\";\n// import scopes from \"../conf/scopes\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\n\nconst Index = () => {\n  const spotifyApi = new SpotifyWebApi({\n    clientId: process.env.CLIENT_ID,\n    clientSecret: process.env.CLIENT_SECRET,\n    redirectUri: \"http://localhost:8080/\"\n  });\n\n  const gettoken = () => {\n    const data = spotifyApi.getAccessToken();\n    return console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    height: \"100vh\",\n    children: [/*#__PURE__*/_jsxDEV(DarkModeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => {\n        gettoken();\n      },\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/szymo/gitRepo/spotify_webapp/web/src/pages/index.tsx"],"names":["DarkModeSwitch","Container","Button","SpotifyWebApi","Index","spotifyApi","clientId","process","env","CLIENT_ID","clientSecret","CLIENT_SECRET","redirectUri","gettoken","data","getAccessToken","console","log"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,8BAA/B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,MAAT,QAA6B,kBAA7B;AAGA;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,UAAU,GAAG,IAAIF,aAAJ,CAAkB;AACnCG,IAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,SADa;AAEnCC,IAAAA,YAAY,EAAEH,OAAO,CAACC,GAAR,CAAYG,aAFS;AAGnCC,IAAAA,WAAW,EAAE;AAHsB,GAAlB,CAAnB;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACrB,UAAMC,IAAI,GAAGT,UAAU,CAACU,cAAX,EAAb;AACA,WAAOC,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAAP;AACD,GAHD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,MAAM,EAAC,OAAlB;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAI,MAAM;AACvBD,QAAAA,QAAQ;AACT,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CArBD;;AAuBA,eAAeT,KAAf","sourcesContent":["import { DarkModeSwitch } from \"../components/DarkModeSwitch\";\nimport { Container } from \"../components/Container\";\nimport { Button, Link } from \"@chakra-ui/react\";\nimport { url } from \"../utils/loginUrl\";\n\n// import scopes from \"../conf/scopes\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport { useRouter } from \"next/router\";\nconst Index = () => {\n  const spotifyApi = new SpotifyWebApi({\n    clientId: process.env.CLIENT_ID,\n    clientSecret: process.env.CLIENT_SECRET,\n    redirectUri: \"http://localhost:8080/\",\n  });\n\n  const gettoken = () => {\n    const data = spotifyApi.getAccessToken();\n    return console.log(data);\n  }\n  return (\n    <Container height=\"100vh\">\n      <DarkModeSwitch />\n      {/* <Link href={url}> */}\n        <Button onClick = {() => {\n          gettoken()\n        }}>login</Button>\n      {/* </Link> */}\n    </Container>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}